x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),  # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"), # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                    # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
library(ggplot2)
# Sigmoidní funkce
sigmoid <- function(a) {
1 / (1 + exp(-a))
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- sigmoid(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.8) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 0.5, 1),
labels = c(-1, 0, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1.5, color = "black"),  # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"), # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                    # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
library(ggplot2)
# Sigmoidní funkce
sigmoid <- function(a) {
1 / (1 + exp(-a))
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- sigmoid(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.8) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 0.5, 1),
labels = c(-1, 0, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),  # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"), # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                    # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
library(ggplot2)
# Sigmoidní funkce
sigmoid <- function(a) {
1 / (1 + exp(-a))
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- sigmoid(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.7) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 0.5, 1),
labels = c(-1, 0, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),  # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"), # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                    # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
library(ggplot2)
# Sigmoidní funkce
sigmoid <- function(a) {
1 / (1 + exp(-a))
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- sigmoid(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 0.5, 1),
labels = c(-1, 0, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),  # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"), # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                    # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
library(ggplot2)
# Sigmoidní funkce
sigmoid <- function(a) {
1 / (1 + exp(-a))
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- sigmoid(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 0.5, 1),  # Správné hodnoty sigmoidní funkce
labels = c(0, 0.5, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),    # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"),   # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                     # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
#tanh
{
library(ggplot2)
# Hyperbolický tangens
tanh_function <- function(a) {
tanh(a)
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- tanh_function(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(-1, 0, 1),  # Rozsah hyperbolického tangens
labels = c(-1, 0, 1)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),    # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"),   # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                     # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
#relu
{
library(ggplot2)
# ReLU funkce
relu_function <- function(a) {
pmax(0, a)
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- relu_function(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 5, 10),  # Příkladné rozsahy pro ReLU
labels = c(0, 5, 10)
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),    # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"),   # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                     # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
#relu
{
# ReLU funkce
relu_function <- function(a) {
pmax(0, a)
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- relu_function(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 10),
labels = c(expression(-infinity), 0, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 10),
labels = c(0, expression(+infinity))
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),    # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"),   # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                     # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
#relu
{
# ReLU funkce
relu_function <- function(a) {
pmax(0, a)
}
# Generování dat
a_values <- seq(-10, 10, length.out = 100)
f_values <- relu_function(a_values)
data <- data.frame(a = a_values, f_a = f_values)
# Vykreslení grafu
ggplot(data, aes(x = a, y = f_a)) +
geom_line(color = "black", size = 1.6) +  # Zvýraznění křivky
scale_x_continuous(
breaks = c(-10, 0, 1, 2, 10),
labels = c(expression(-infinity), 0, 1, 2, expression(+infinity))
) +
scale_y_continuous(
breaks = c(0, 1, 2, 10),
labels = c(0, 1, 2, expression(+infinity))
) +
labs(
x = expression(a),
y = expression(f(a))
) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_text(size = 18, face = "bold"),    # Ztučněné názvy os
axis.text = element_text(size = 16, face = "bold"),     # Ztučněné hodnoty
axis.line = element_line(size = 1, color = "black"),    # Zvýraznění os
axis.ticks = element_line(size = 1, color = "black"),   # Zvýraznění značek
panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray30"), # Hlavní mřížky
panel.grid.minor = element_blank(),                     # Skrytí vedlejších mřížek
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
}
vysledky
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
povodi[[i]] <- cur_pov
}
names(povodi) <- c("salmon","bigsur","merced","naci","sft")
povodi[["salmon"]]
plot(povodi[["sft"]]$Q,type = "l")
povodi[[1]]
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
}
names(povodi) <- c("salmon","bigsur","merced","naci","sft")
povodi[["salmon"]]
plot(povodi[["sft"]]$Q,type = "l")
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
}
names(povodi) <- c("salmon","bigsur","merced","naci","sft")
povodi[["salmon"]]
plot(povodi[["sft"]]$Q,type = "l")
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(c(cur_pov,Qcamel,Rcamel))
}
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(cur_pov,Qcamel,Rcamel)
}
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(cur_pov,Qcamel,Rcamel)
}
names(povodi) <- c("salmon","bigsur","merced","naci","sft")
povodi[["salmon"]]
plot(povodi[["sft"]]$Q,type = "l")
plot(povodi[["sft"]]$Tmax,type = "l")
plot(povodi[["merced"]]$Q,type = "l")
library(Rcpp)
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
Rcpp::sourceCpp("rcppstuff.cpp")
library(Rcpp)
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
Rcpp::sourceCpp("rcppstuff.cpp")
mae <- function(vec1, vec2) {
if (length(vec1) != length(vec2)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(vec1)){
err = err + abs(vec1[i] - vec2[i])
}
err = err/length(vec1)
return(err)
}
abc = c(1,4,8,5)
def = c(3,1,8,9)
mae(abc,def)
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
povodi <- list()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
cur_pov <- data.frame(Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(cur_pov,Qcamel,Rcamel)
}
names(povodi) <- c("salmon","bigsur","merced","naci","sft")
povodi[["salmon"]]
plot(povodi[["merced"]]$Q,type = "l")
mae(povodi[["merced"]]$Q,povodi[["merced"]]$Q)
mae(povodi[["merced"]]$Q,povodi[["merced"]]$Q+2)
mae <- function(vec1, vec2) {
if (length(vec1) != length(vec2)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(vec1)){
err = err + abs(vec1[i] - vec2[i])
}
err = err/length(vec1)
return(err)
}
abc = c(1,4,8,5)
def = c(3,1,8,9)
rmse <- function(vec1, vec2) {
if (length(vec1) != length(vec2)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(vec1)){
err = err + (vec1[i] - vec2[i])^2
}
err = sqrt(err/length(vec1))
return(err)
}
rmse(abc,def)
rmse(povodi[["merced"]]$Q,povodi[["merced"]]$Q)
rmse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+1)
rmse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+2)
nse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 1:length(mod)){
cit = cit + (mod[i] - obs[i])^2
jme = jme + (mod[i] - mean(obs))^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
nse(c(1,2,3,4),c(1.1,2.1,3.1,4.1))
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+1)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+0.5)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+0.01)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+0.11)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+0.1)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+10)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+100)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+1000)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Q+100000)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$R)
nse(povodi[["merced"]]$Q,povodi[["merced"]]$Tmax)
