}
names(minmax) <- c("minQ","maxQ")
names_povodi <- c("salmon","bigsur","merced","arroyo","andreas")
names(povodi) <- names_povodi
mae <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + abs(mod[i] - obs[i])
}
err = err/length(mod)
return(err)
}
rmse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + (mod[i] - obs[i])^2
}
err = sqrt(err/length(mod))
return(err)
}
nse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 1:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - mean(obs))^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
pi <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 2:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - obs[i-1])^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
}  # nacteni Rcpp, dat a funkce kriterii
output_folder <- "D:/pokusydip/"
x = 1
vysl = data.frame()
vysl_cr = list()
for(o in 1:5){
for(m in 14){
for(l in c(20)){
for(k in c(10,50,100,200,500)){
for(j in 5){
for(i in 2){
poc_neur = m
roky_cal = l
iter = k
LAG = j
Qkal = povodi[[i]]$Q[1:(roky_cal*365)]
Qval = povodi[[i]]$Q[(roky_cal*365+1):length(povodi[[i]]$Q)]
dt = matrix(0, nrow = (length(Qkal)-LAG), ncol = LAG )
for (n in 1:LAG){ dt[,n] = Qkal[(LAG-n+1):(length(Qkal)-n)] }
chtenejout = Qkal[(LAG+1):length(Qkal)]
dt2 = matrix(0, nrow = (length(Qval)-LAG), ncol = LAG )
for (n in 1:LAG){ dt2[,n] = Qval[(LAG-n+1):(length(Qval)-n)] }
mlp <- udelej_nn()
nn_init_nn(mlp,LAG,c(poc_neur,poc_neur,1))
nn_set_chtenejout(mlp,chtenejout)
nn_set_traindata(mlp,dt)
nn_online_bp_adam(mlp,iter)
nn_set_valdata(mlp,dt2)
nn_valid(mlp)
vystupy <- nn_get_vystupy(mlp)
# Vytvoření datového rámce pro ggplot
df_plot <- data.frame(
Datum = povodi[[i]]$Datum[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Datum)],
Q_měřené = povodi[[i]]$Q[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Q)]*(minmax[i,2]-minmax[i,1])+minmax[i,1],
Q_modelované = vystupy*(minmax[i,2]-minmax[i,1])+minmax[i,1]
)
# Vytvoření ggplot objektu
plot <- ggplot(df_plot, aes(x = Datum)) +
geom_line(aes(y = Q_měřené, color = "Měřené"), linewidth = 0.6) +
geom_line(aes(y = Q_modelované, color = "Model"), linewidth = 0.45) +
scale_color_manual(values = c("Měřené" = "black", "Model" = "red")) +
labs(
title = paste0("povodi=", i, " lag=", LAG," poc_neur=", poc_neur," iter=",iter," roky cal=", roky_cal),
subtitle = paste0(
"mae=", round(mae(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    rmse=", round(rmse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    nse=", round(nse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    pi=", round(pi(df_plot$Q_modelované, df_plot$Q_měřené),3)
),
x = NULL,
y = "Q [m3/s]",
colour = NULL
) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
cur_id = paste0(i,"_",LAG,"_",poc_neur,"_",iter,"_",roky_cal,"_","pok",o,"_A")
# Uložení grafu do souboru
file_path <- file.path(output_folder, paste0(cur_id, ".png"))
ggsave(file_path, plot = plot, width = 8, height = 6, dpi = 300, bg = "white")
print(x)
vysl[x,1] = names_povodi[i]
vysl[x,2] = LAG
vysl[x,3] = poc_neur
vysl[x,4] = iter
vysl[x,5] = roky_cal
vysl[x,6] = round(mae(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,7] = round(rmse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,8] = round(nse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,9] = round(pi(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,10] = x
vysl[x,11] = cur_id
vysl_cr[[x]] <- df_plot
x= x+1
}}}}}}
vysl
vysl[vysl$pi>0.1]
vysl[vysl$pi>0.1,]
names(vysl) = c("povodi","LAG","poc_neur","iter","roky_cal","mae","rmse","nse","pi","x","id")
vysl[vysl$pi>0.1,]
vysl[vysl$pi>0.1]
vysl[vysl$pi>0.1,]
vysl[vysl$pi>0.1,na.rm=TRUE,]
vysl[(vysl$pi>0.1,na.rm=TRUE),]
vysl[vysl$pi == max(vysl$pi),]
vysl[vysl$pi == max(vysl$pi,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco[tabneco$povodi=="bigsur",]
nrow(tabneco)
nrow(tabneco[tabneco$povodi=="bigsur",])
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="bigsur",]
tabneco[tabneco$pi==max(tabneco$pi),]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vysl[vysl$pi == max(vysl$pi,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
unique(tabneco$LAG)
unique(tabneco$poc_neur)
#########################################################################################x
#########################         ANN              #####################################
#########################################################################################
{library(Rcpp)
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
library(ggplot2)
Rcpp::sourceCpp("rcppstuff.cpp")
povodi <- list()
minmax <- data.frame()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Qcamel <- Qcamel[!(Qcamel$V3 == 2 & Qcamel$V4 == 29), ]
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
Rcamel <- Rcamel[!(Rcamel$V2 == 2 & Rcamel$V3 == 29), ]
cur_pov <- data.frame(Datum = as.Date(paste(Rcamel$V1,Rcamel$V2,Rcamel$V3, sep = "-")),
Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
minmax[i,1] = min(cur_pov$Q)
minmax[i,2] = max(cur_pov$Q)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(cur_pov,Qcamel,Rcamel)
}
names(minmax) <- c("minQ","maxQ")
names_povodi <- c("salmon","bigsur","merced","arroyo","andreas")
names(povodi) <- names_povodi
mae <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + abs(mod[i] - obs[i])
}
err = err/length(mod)
return(err)
}
rmse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + (mod[i] - obs[i])^2
}
err = sqrt(err/length(mod))
return(err)
}
nse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 1:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - mean(obs))^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
pi <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 2:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - obs[i-1])^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
}  # nacteni Rcpp, dat a funkce kriterii
output_folder <- "D:/pokusydip/"
x = 1
vysl = data.frame()
vysl_cr = list()
for(o in 1){
for(m in c(3,5,7,10,14,20)){
for(l in c(10,20)){
for(k in c(5,10,15)){
for(j in c(3,5,7,14)){
for(i in 1:5){
poc_neur = m
roky_cal = l
iter = k
LAG = j
Qkal = povodi[[i]]$Q[1:(roky_cal*365)]
Qval = povodi[[i]]$Q[(roky_cal*365+1):length(povodi[[i]]$Q)]
dt = matrix(0, nrow = (length(Qkal)-LAG), ncol = LAG )
for (n in 1:LAG){ dt[,n] = Qkal[(LAG-n+1):(length(Qkal)-n)] }
chtenejout = Qkal[(LAG+1):length(Qkal)]
dt2 = matrix(0, nrow = (length(Qval)-LAG), ncol = LAG )
for (n in 1:LAG){ dt2[,n] = Qval[(LAG-n+1):(length(Qval)-n)] }
mlp <- udelej_nn()
nn_init_nn(mlp,LAG,c(poc_neur,poc_neur,1))
nn_set_chtenejout(mlp,chtenejout)
nn_set_traindata(mlp,dt)
nn_online_bp_adam(mlp,iter)
nn_set_valdata(mlp,dt2)
nn_valid(mlp)
vystupy <- nn_get_vystupy(mlp)
# Vytvoření datového rámce pro ggplot
df_plot <- data.frame(
Datum = povodi[[i]]$Datum[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Datum)],
Q_měřené = povodi[[i]]$Q[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Q)]*(minmax[i,2]-minmax[i,1])+minmax[i,1],
Q_modelované = vystupy*(minmax[i,2]-minmax[i,1])+minmax[i,1]
)
# Vytvoření ggplot objektu
plot <- ggplot(df_plot, aes(x = Datum)) +
geom_line(aes(y = Q_měřené, color = "Měřené"), linewidth = 0.6) +
geom_line(aes(y = Q_modelované, color = "Model"), linewidth = 0.45) +
scale_color_manual(values = c("Měřené" = "black", "Model" = "red")) +
labs(
title = paste0("povodi=", i, " lag=", LAG," poc_neur=", poc_neur," iter=",iter," roky cal=", roky_cal),
subtitle = paste0(
"mae=", round(mae(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    rmse=", round(rmse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    nse=", round(nse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    pi=", round(pi(df_plot$Q_modelované, df_plot$Q_měřené),3)
),
x = NULL,
y = "Q [m3/s]",
colour = NULL
) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
cur_id = paste0(i,"_",LAG,"_",poc_neur,"_",iter,"_",roky_cal,"_","pok",o,"_A")
# Uložení grafu do souboru
file_path <- file.path(output_folder, paste0(cur_id, ".png"))
ggsave(file_path, plot = plot, width = 8, height = 6, dpi = 300, bg = "white")
print(x)
vysl[x,1] = names_povodi[i]
vysl[x,2] = LAG
vysl[x,3] = poc_neur
vysl[x,4] = iter
vysl[x,5] = roky_cal
vysl[x,6] = round(mae(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,7] = round(rmse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,8] = round(nse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,9] = round(pi(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,10] = x
vysl[x,11] = cur_id
vysl_cr[[x]] <- df_plot
x= x+1
}}}}}}
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="bigsur",]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco <- vyslneco[vyslneco$povodi=="bigsur",]
vyslneco <- vysl[vysl$povodi=="bigsur",]
vyslneco
names(vysl) = c("povodi","LAG","poc_neur","iter","roky_cal","mae","rmse","nse","pi","x","id")
saveRDS(vysl,"D:/pokusydip/vysl.rds")
saveRDS(vysl_cr,"D:/pokusydip/vysl_cr.rds")
vyslneco <- vysl[vysl$povodi=="bigsur",]
vyslneco
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
vyslneco[vyslneco$nse==max(vyslneco$nse,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="salmon",]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco <- vysl[vysl$povodi=="salmon",]
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
vyslneco[vyslneco$nse==max(vyslneco$nse,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="merced",]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco <- vysl[vysl$povodi=="merced",]
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
vyslneco[vyslneco$nse==max(vyslneco$nse,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="arroyo",]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco <- vysl[vysl$povodi=="arroyo",]
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
vyslneco[vyslneco$nse==max(vyslneco$nse,na.rm = TRUE),]
tabneco = readRDS("D:/pokusydip/ANN/vysl.rds")
tabneco <- tabneco[tabneco$povodi=="andreas",]
tabneco[tabneco$pi==max(tabneco$pi,na.rm = TRUE),]
tabneco[tabneco$nse==max(tabneco$nse,na.rm = TRUE),]
vyslneco <- vysl[vysl$povodi=="andreas",]
vyslneco[vyslneco$pi==max(vyslneco$pi,na.rm = TRUE),]
vyslneco[vyslneco$nse==max(vyslneco$nse,na.rm = TRUE),]
#########################################################################################x
#########################         ANN              #####################################
#########################################################################################
{library(Rcpp)
setwd("C:/Users/danek/Desktop/mlpR/vsnn")
library(ggplot2)
Rcpp::sourceCpp("rcppstuff.cpp")
povodi <- list()
minmax <- data.frame()
for(i in 1:5){
Qcamel <- read.table(paste0("./vyberdata/",i,"_q.txt"), header=FALSE)
Qcamel <- Qcamel[!(Qcamel$V3 == 2 & Qcamel$V4 == 29), ]
Rcamel <- read.table(paste0("./vyberdata/",i,"_r.txt"), header=FALSE, skip = 4)
Rcamel <- Rcamel[!(Rcamel$V2 == 2 & Rcamel$V3 == 29), ]
cur_pov <- data.frame(Datum = as.Date(paste(Rcamel$V1,Rcamel$V2,Rcamel$V3, sep = "-")),
Q = (Qcamel$V5 * 0.0283168466), R = Rcamel$V6, Tmax = Rcamel$V9)
minmax[i,1] = min(cur_pov$Q)
minmax[i,2] = max(cur_pov$Q)
cur_pov$Q <- (cur_pov$Q - min(cur_pov$Q))/(max(cur_pov$Q)-min(cur_pov$Q))
cur_pov$R <- (cur_pov$R - min(cur_pov$R))/(max(cur_pov$R)-min(cur_pov$R))
cur_pov$Tmax <- (cur_pov$Tmax - min(cur_pov$Tmax))/(max(cur_pov$Tmax)-min(cur_pov$Tmax))
povodi[[i]] <- cur_pov
rm(cur_pov,Qcamel,Rcamel)
}
names(minmax) <- c("minQ","maxQ")
names_povodi <- c("salmon","bigsur","merced","arroyo","andreas")
names(povodi) <- names_povodi
mae <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + abs(mod[i] - obs[i])
}
err = err/length(mod)
return(err)
}
rmse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
for (i in 1:length(mod)){
err = err + (mod[i] - obs[i])^2
}
err = sqrt(err/length(mod))
return(err)
}
nse <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 1:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - mean(obs))^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
pi <- function(mod, obs) {
if (length(mod) != length(obs)) {
stop("Vektory musí mít stejnou délku")
}
err = 0
cit = 0
jme = 0
for (i in 2:length(mod)){
cit = cit + (obs[i] - mod[i])^2
jme = jme + (obs[i] - obs[i-1])^2
}
err = 1-(cit/length(mod))/(jme/length(mod))
return(err)
}
}  # nacteni Rcpp, dat a funkce kriterii
output_folder <- "D:/pokusydip/"
x = 1
vysl = data.frame()
vysl_cr = list()
for(o in 1:3){
for(m in 14){
for(l in 20){
for(k in c(5,10,15)){
for(j in 5){
for(i in 2){
poc_neur = m
roky_cal = l
iter = k
LAG = j
Qkal = povodi[[i]]$Q[1:(roky_cal*365)]
Qval = povodi[[i]]$Q[(roky_cal*365+1):length(povodi[[i]]$Q)]
dt = matrix(0, nrow = (length(Qkal)-LAG), ncol = LAG )
for (n in 1:LAG){ dt[,n] = Qkal[(LAG-n+1):(length(Qkal)-n)] }
chtenejout = Qkal[(LAG+1):length(Qkal)]
dt2 = matrix(0, nrow = (length(Qval)-LAG), ncol = LAG )
for (n in 1:LAG){ dt2[,n] = Qval[(LAG-n+1):(length(Qval)-n)] }
mlp <- udelej_nn()
nn_init_nn(mlp,LAG,c(poc_neur,poc_neur,1))
nn_set_chtenejout(mlp,chtenejout)
nn_set_traindata(mlp,dt)
nn_online_bp_adam(mlp,iter)
nn_set_valdata(mlp,dt2)
nn_valid(mlp)
vystupy <- nn_get_vystupy(mlp)
# Vytvoření datového rámce pro ggplot
df_plot <- data.frame(
Datum = povodi[[i]]$Datum[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Datum)],
Q_měřené = povodi[[i]]$Q[(roky_cal * 365 + 1 + LAG):length(povodi[[i]]$Q)]*(minmax[i,2]-minmax[i,1])+minmax[i,1],
Q_modelované = vystupy*(minmax[i,2]-minmax[i,1])+minmax[i,1]
)
# Vytvoření ggplot objektu
plot <- ggplot(df_plot, aes(x = Datum)) +
geom_line(aes(y = Q_měřené, color = "Měřené"), linewidth = 0.6) +
geom_line(aes(y = Q_modelované, color = "Model"), linewidth = 0.45) +
scale_color_manual(values = c("Měřené" = "black", "Model" = "red")) +
labs(
title = paste0("povodi=", i, " lag=", LAG," poc_neur=", poc_neur," iter=",iter," roky cal=", roky_cal),
subtitle = paste0(
"mae=", round(mae(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    rmse=", round(rmse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    nse=", round(nse(df_plot$Q_modelované, df_plot$Q_měřené),3),
"    pi=", round(pi(df_plot$Q_modelované, df_plot$Q_měřené),3)
),
x = NULL,
y = "Q [m3/s]",
colour = NULL
) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 10)
)
cur_id = paste0(i,"_",LAG,"_",poc_neur,"_",iter,"_",roky_cal,"_","pok",o,"_A")
# Uložení grafu do souboru
file_path <- file.path(output_folder, paste0(cur_id, ".png"))
ggsave(file_path, plot = plot, width = 8, height = 6, dpi = 300, bg = "white")
print(x)
vysl[x,1] = names_povodi[i]
vysl[x,2] = LAG
vysl[x,3] = poc_neur
vysl[x,4] = iter
vysl[x,5] = roky_cal
vysl[x,6] = round(mae(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,7] = round(rmse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,8] = round(nse(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,9] = round(pi(df_plot$Q_modelované,df_plot$Q_měřené),3)
vysl[x,10] = x
vysl[x,11] = cur_id
vysl_cr[[x]] <- df_plot
x= x+1
}}}}}}
